<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ConfigWidget</class>
 <widget class="QWidget" name="ConfigWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>733</width>
    <height>469</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QPushButton#btnConnect{background-color:rgb(80,180,80)}
QWidget{background-color: rgba(0,0,0,0);color:white;border-radius:5px}
QWidget#mainWidget{background-color:rgba(128,128,128,25%);}
QWidget#frmProfile,QWidget#pageProfile{background-color:rgba(108,8,156,25%);}
QPlainTextEdit,QLineEdit,QListWidget,QComboBox,QTextEdit,QSpinBox{background-color: rgba(255,255,255,50%); color: black;}

QTableWidget{
background-color: rgba(0,0,0,50%);
color: white;
border: 1px solid rgba(255,255,255,50%);
}

QLabel#lblLastOnline{color:lightblue;}
QLabel#lblError,QLabel#lblCamMissing,QLabel#lblAudioMissing{color:red; background-color:rgba(255,0,0,30%);}

QLineEdit:!enabled, QListWidget:!enabled,QComboBox:!enabled,QTextEdit:!enabled,QPlainTextEdit:!enabled{background-color: rgba(0,0,0,30%);color:white;border:0}
QDateEdit::down-arrow:!enabled,QTimeEdit::down-arrow:!enabled,QDateEdit::up-arrow:!enabled,QTimeEdit::up-arrow:!enabled,QComboBox::drop-down:!enabled{background-color:rgba(0,0,0,0%);}

QTextEdit#txtProfile{background-color: rgba(255,255,255,80%);color:black;border:0}
QTextEdit:!enabled#txtProfile{background-color: rgba(255,255,255,60%);color:black;border:0}

QFrame#frmSelUser{background-color:rgba(100,100,200,50%);}
QFrame#frmAudio,QFrame#frmCam1,QFrame#frmCam2,QFrame#frmSensors,QFrame#frmWebRTC,QFrame#frmVirtualCam,QFrame#frmExternalPrograms{background-color:rgba(100,100,200,35%);}

QCheckBox::indicator:unchecked:!enabled { background-color:rgba(128,0,0,100%);}
QCheckBox::indicator:checked:!enabled { background-color:green;}
QCheckBox::indicator:unchecked{ background-color:red;border-radius:3px;}
QCheckBox::indicator:checked {background-color:rgb(0,255,0);border-radius:3px;}
QCheckBox:checked{color:lightgreen;background-color:rgba(0,0,0,0%);}
QCheckBox:!checked{color:red;background-color:rgba(0,0,0,0%);}

QPushButton{background-color:qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2198c0, stop: 1 #0d5ca6);}
QPushButton:checked{background-color:rgb(128,128,128); border:1px solid rgba(255,255,255,50%);}
QPushButton:hover,QPushButton:checked{background-color:  rgba(255,255,255,75%);color:black;}
QPushButton#btnEditUser:hover{background-color:  rgba(255,255,255,75%);color:black;}
QPushButton#btnEdit,QPushButton#btnDelete,QPushButton#btnExisting{background-color:  rgba(255,255,255,0%);border:0 px;}
QPushButton#btnEdit:hover,QPushButton#btnDelete:hover,QPushButton#btnExisting:hover{background-color:  rgba(255,255,255,25%);border:0 px;}
QPushButton#btnExisting:checked{background-color:rgba(0,100,200,50%);}
QPushButton#btnUpgrade{background-color:rgba(200,0,0,90%);}

QToolButton:hover{background-color:  rgba(255,255,255,50);}

QTreeWidget::branch:closed:has-children:has-siblings  {
            border-image: none;
            image: url(:/pictures/controls/branch_closed.png);
    }
     
    QTreeView::branch:open:has-children:!has-siblings,
    QTreeView::branch:open:has-children:has-siblings   {
            border-image: none;
            image:url(:/pictures/controls/branch_opened.png);
    }

QWidget#lineOnline{background-color:blue;}
QWidget#lineOffline{background-color:red;}
QWidget#lineBoth{background-color:rgb(255,0,255);}


QTabWidget::pane { /* The tab widget frame */
	/*background-color:  rgba(0,128,200,30%);*/
	/* background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0  rgba(0,128,200,50%), 
								stop: 0.5  rgba(0,128,200,25%)
								stop: 1.0  rgba(0,128,200,25%));*/
	background-color: rgba(128,128,140,25%);
	border-radius: 5px;
    border: 2px solid rgba(128,128,140,50%);
 }

 QTabWidget::tab-bar {
     left: 5px; /* move to the right by 5px */
 }

/* Style the tab using the tab sub-control. Note that
     it reads QTabBar _not_ QTabWidget */
 QTabBar::tab,QTableWidget::tab,QHeaderView::section {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0  rgba(128,128,140,50%),  stop: 1.0  rgba(128,128,140,25%));
     border: 2px solid  rgba(128,128,140,50%);
     border-bottom: 0px;
     border-top-left-radius: 4px;
     border-top-right-radius: 4px;
     padding: 2px;
min-height:25px;
 }

 QTabBar::tab:selected, QTabBar::tab:hover {
/*     background-color: rgba(0,128,200,70%);*/
background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0  rgba(128,128,140,70%),  stop: 1.0  rgba(128,128,140,50%));
 }

 QTabBar::tab:selected {
     border-color:rgba(128,128,140,60%);
     border-bottom-color:rgba(128,128,140,60%); /* same as pane color */
 }

 QTabBar::tab:!selected {
     margin-top: 2px; /* make non-selected tabs look smaller */
 }


</string>
  </property>
  <layout class="QHBoxLayout" name="horizontalLayout">
   <item alignment="Qt::AlignLeft">
    <widget class="QListWidget" name="lstSections">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Maximum" vsizetype="Expanding">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="maximumSize">
      <size>
       <width>100</width>
       <height>16777215</height>
      </size>
     </property>
     <property name="editTriggers">
      <set>QAbstractItemView::NoEditTriggers</set>
     </property>
     <property name="showDropIndicator" stdset="0">
      <bool>false</bool>
     </property>
     <property name="defaultDropAction">
      <enum>Qt::IgnoreAction</enum>
     </property>
     <property name="selectionBehavior">
      <enum>QAbstractItemView::SelectRows</enum>
     </property>
     <property name="iconSize">
      <size>
       <width>64</width>
       <height>64</height>
      </size>
     </property>
     <property name="movement">
      <enum>QListView::Static</enum>
     </property>
     <property name="flow">
      <enum>QListView::LeftToRight</enum>
     </property>
     <property name="isWrapping" stdset="0">
      <bool>true</bool>
     </property>
     <property name="resizeMode">
      <enum>QListView::Adjust</enum>
     </property>
     <property name="gridSize">
      <size>
       <width>100</width>
       <height>100</height>
      </size>
     </property>
     <property name="viewMode">
      <enum>QListView::IconMode</enum>
     </property>
     <property name="uniformItemSizes">
      <bool>true</bool>
     </property>
     <property name="wordWrap">
      <bool>true</bool>
     </property>
     <property name="selectionRectVisible">
      <bool>true</bool>
     </property>
     <property name="itemAlignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QWidget" name="wdgEditor" native="true">
     <layout class="QHBoxLayout" name="layoutEditor"/>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
